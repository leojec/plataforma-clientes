{"ast":null,"code":"var _jsxFileName = \"/Users/leonardorocha/Documents/TCC/projeto/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // Aqui você pode fazer uma chamada para validar o token e buscar dados do usuário\n      setUser({\n        token\n      }); // Por enquanto, apenas define o token\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, senha) => {\n    try {\n      const response = await api.post('/login', {\n        email,\n        senha\n      });\n      const {\n        token,\n        usuario\n      } = response.data;\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser({\n        ...usuario,\n        token\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response;\n      let errorMessage = 'Erro ao fazer login';\n      if ((_error$response = error.response) !== null && _error$response !== void 0 && _error$response.data) {\n        if (typeof error.response.data === 'string') {\n          errorMessage = error.response.data;\n        } else if (error.response.data.message) {\n          errorMessage = error.response.data.message;\n        } else if (error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else {\n          errorMessage = 'Erro de conexão com o servidor';\n        }\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","defaults","headers","common","login","email","senha","response","post","usuario","data","setItem","success","error","_error$response","errorMessage","message","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leonardorocha/Documents/TCC/projeto/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n}\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // Aqui você pode fazer uma chamada para validar o token e buscar dados do usuário\n      setUser({ token }); // Por enquanto, apenas define o token\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, senha) => {\n    try {\n      const response = await api.post('/login', { email, senha });\n      const { token, usuario } = response.data;\n      \n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser({ ...usuario, token });\n      \n      return { success: true };\n    } catch (error) {\n      let errorMessage = 'Erro ao fazer login';\n      \n      if (error.response?.data) {\n        if (typeof error.response.data === 'string') {\n          errorMessage = error.response.data;\n        } else if (error.response.data.message) {\n          errorMessage = error.response.data.message;\n        } else if (error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else {\n          errorMessage = 'Erro de conexão com o servidor';\n        }\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      \n      return { \n        success: false, \n        message: errorMessage\n      };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    login,\n    logout,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}